package com.ilbluesky.mybatis.generator.custom.plugin;

import com.ilbluesky.mybatis.generator.custom.xmlgen.elements.AbstractXmlPluginAdaptor;
import com.ilbluesky.mybatis.generator.custom.xmlgen.elements.SqlMapDocumentOverrider;
import com.ilbluesky.mybatis.generator.custom.xmlgen.elements.SqlMapInsertOverrider;
import com.ilbluesky.mybatis.generator.custom.xmlgen.elements.SqlMapInsertSelectiveOverrider;
import com.ilbluesky.mybatis.generator.custom.xmlgen.elements.SqlMapResultMapWithoutBLOBsOverrider;
import java.util.List;
import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.PluginAdapter;
import org.mybatis.generator.api.dom.xml.Attribute;
import org.mybatis.generator.api.dom.xml.Document;
import org.mybatis.generator.api.dom.xml.XmlElement;

public class ChangeGeneratedXmlForAdayoSrmPlugin extends PluginAdapter {

    @Override
    public boolean validate(List<String> warnings) {
        warnings.add(ChangeGeneratedXmlForAdayoSrmPlugin.class.getName());

        return true;
    }


    /**
     * 改变生成的mapper xml里面 resultMap 节点下 element 的 attribute 顺序。
     * <result column=... property=... jdbcType=... />
     * @param answer
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean sqlMapResultMapWithoutBLOBsElementGenerated(XmlElement answer,
            IntrospectedTable introspectedTable) {

        // clean the objects generated by mybatis-generator
        AbstractXmlPluginAdaptor overrider = new SqlMapResultMapWithoutBLOBsOverrider(answer,
                introspectedTable, this);
        overrider.override();

        return super.sqlMapResultMapWithoutBLOBsElementGenerated(answer, introspectedTable);
    }


    /**
     * This method will be executed after when selectByExample element was generated by MBG.
     * @param element
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean sqlMapSelectByExampleWithoutBLOBsElementGenerated(XmlElement element,
            IntrospectedTable introspectedTable) {
        return super.sqlMapSelectByExampleWithoutBLOBsElementGenerated(element, introspectedTable);
    }


    /**
     * This method will be executed after when insert element was generated by MBG.
     * @param answer
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean sqlMapInsertElementGenerated(XmlElement answer,
            IntrospectedTable introspectedTable) {

        // clear the attributes and elements generated by MBG.
        AbstractXmlPluginAdaptor overrider = new SqlMapInsertOverrider(answer,
                introspectedTable, this);
        overrider.override();

        return super.sqlMapInsertElementGenerated(answer, introspectedTable);
    }


    /**
     * This method will be executed after when insertSelective element was generated by MBG.
     * @param answer
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean sqlMapInsertSelectiveElementGenerated(XmlElement answer,
            IntrospectedTable introspectedTable) {

        AbstractXmlPluginAdaptor overrider = new SqlMapInsertSelectiveOverrider(answer,
                introspectedTable, this);
        overrider.override();

        return super.sqlMapInsertSelectiveElementGenerated(answer, introspectedTable);
    }


    /**
     * 更改由MBG生成的 countByExample 的 resultType 类型
     * @param answer
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean sqlMapCountByExampleElementGenerated(XmlElement answer,
            IntrospectedTable introspectedTable) {

/*
        answer.addAttribute(new Attribute(
                "id", introspectedTable.getCountByExampleStatementId())); //$NON-NLS-1$
        answer.addAttribute(new Attribute("parameterType", fqjt)); //$NON-NLS-1$
        answer.addAttribute(new Attribute("resultType", "java.lang.Integer")); //$NON-NLS-1$ //$NON-NLS-2$
*/
        answer.getAttributes().set(2, new Attribute("resultType", "java.lang.Integer"));
        return super.sqlMapCountByExampleElementGenerated(answer, introspectedTable);
    }


    /**
     * 在生成 update 节点后面，加上一个名为 selectByExampleByPage 的节点
     * @param document
     * @param introspectedTable
     * @return
     */
    @Override
    public boolean sqlMapDocumentGenerated(Document document,
            IntrospectedTable introspectedTable) {

        AbstractXmlPluginAdaptor overrider = new SqlMapDocumentOverrider(document, introspectedTable,
                this);
        overrider.override();

        return super.sqlMapDocumentGenerated(document, introspectedTable);
    }

}
